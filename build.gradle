apply plugin: 'java'
apply plugin:'application'
apply plugin: 'eclipse'

version = '1.0'
mainClassName = "ninefoo.application.Application"

// Variables
def applicationTitle = 'PMExpert'
def applicationBanner	 ="\n\n\n\n"
applicationBanner	 	+="  .########..##.....##.########.##.....##.########..########.########..########\n"
applicationBanner	 	+="  .##.....##.###...###.##........##...##..##.....##.##.......##.....##....##...\n"
applicationBanner	 	+="  .##.....##.####.####.##.........##.##...##.....##.##.......##.....##....##...\n"
applicationBanner	 	+="  .########..##.###.##.######......###....########..######...########.....##...\n"
applicationBanner	 	+="  .##........##.....##.##.........##.##...##........##.......##...##......##...\n"
applicationBanner	 	+="  .##........##.....##.##........##...##..##........##.......##....##.....##...\n"
applicationBanner	 	+="  .##........##.....##.########.##.....##.##........########.##.....##....##...\n"

sourceSets {
 main.java.srcDir "src/main"
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.3'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.3'
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.7.2'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.5.4'
	compile 'com.fasterxml.jackson.core:jackson-core:2.5.4'
	compile 'com.fasterxml.jackson.core:jackson-annotations:2.5.4'
	testCompile group: 'junit', name: 'junit', version: '4.12'
}

// Creating a jar
task pmexpert_jar (dependsOn:['clean','build'], type: Jar) {
	
	description 'Export application to jar'

	build.mustRunAfter(clean)

	// Custom jar file name and folder
	libsDirName = applicationTitle + '_jar'
	archivesBaseName = applicationTitle
	manifest {
        attributes  'Implementation-Title': applicationTitle,
	                'Implementation-Version': version,
	                'Main-Class': mainClassName
    }

	from sourceSets.main.runtimeClasspath
	from configurations.compile.collect { zipTree it }
} 	

// Print and create application
task pmexpert(dependsOn:['pmexpert_jar']) << {
	println '\n>> Exporting ' + applicationTitle + ' to jar file...\n'

	
}

// Disable task for build
jar.enabled = false

// Print banner
println applicationBanner

// Print Java path used
println "System's JAVA_HOME: " + System.getProperty("java.home")
